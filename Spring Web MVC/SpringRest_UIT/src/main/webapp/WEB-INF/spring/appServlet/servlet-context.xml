<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	   
    <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> </beans:bean> 
	
	<context:component-scan base-package="com.dominhquan.app" />
	
	<beans:bean id="itemService" class="com.dominhquan.service.ItemServiceImpl">
		<!-- <beans:property name="mongoTemplate" ref="mongoTemplate" />-->
		<beans:constructor-arg name="mongoTemplate" ref="mongoTemplate"/>
	</beans:bean>
	<beans:bean id="accountService" class="com.dominhquan.service.AccountServiceImpl">
		<beans:constructor-arg name="mongoTemplate" ref="mongoTemplate"/>
	</beans:bean>
	<!-- Mongo Template -->
	<beans:bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<beans:constructor-arg  name="mongoDbFactory" ref="mongoDbFactory"/>
	</beans:bean>
	<!-- Mongo Config -->
	<mongo:db-factory host="192.168.1.20" port="27017" dbname="shopStore" />
	<!-- Crypto For Login-->
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">  
  		<beans:constructor-arg name="strength" value="10" />  
 	</beans:bean>  
	<!-- Java Mail Config  -->

	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="appgame.cotuong@gmail.com" />
		<beans:property name="password" value="cotuong1" />
		<beans:property name="javaMailProperties">
		   <beans:props>
	       	    <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
	       </beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="mailService" class="com.dominhquan.service.MailService">
		<beans:property name="mailSender" ref="mailSender" />
		<beans:property name="velocityEngine" ref="velocityEngine"/>
	</beans:bean>
	<beans:bean  id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <beans:property name="velocityProperties">
         <beans:value>resource.loader=classclass.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader</beans:value>
      </beans:property>
   </beans:bean>
</beans:beans>
